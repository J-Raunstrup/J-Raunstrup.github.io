{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1030{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.22000}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs22\lang6 lektion 0\b0\par
Hvad kendetegner en god programm\'f8r?\par
En der starter i god tid og beder om hj\'e6lp i stedet for at bede om en udstedt deadline. Derudover en der skriver kommentarer s\'e5 kollegaer kan se hvad tanken bag koden man har skrevet er og hvad koden der er skrevet egentligt refererer til s\'e5 man ikke beh\'f8ves at gennemkigge 1000 vis af linjer kode for at f.eks. finde en lille fejl. Derudover har en erfaren programm\'f8r ogs\'e5 typisk mindsettet "det SKAL kunne lade sig g\'f8re" frem for "det kan IKKE lade sig g\'f8re" Det er bl.a. noget af det der kendetegner en god programm\'f8r.\par
Hvorfor er dokumentation vigtig?\par
Dokumentation er vigtig s\'e5 folk ved hvad der har v\'e6ret ment med den kode man har skrevet. F.eks. hvis jimmy ikke arbejder i firmaet l\'e6ngere s\'e5 er det meget rart hans kollegaer stadig forst\'e5r hvad han har skrevet og hvorfor. Derudover giver det ogs\'e5 bedre overblik hvis man f.eks. skriver kode med flere forskellige til samme projekt. Hvilket man nok ofte g\'f8r. her er det specielt vigtigt samarbejdsmakkerne forst\'e5r hvad der menes med koden der er blevet skrevet.\par
Hvad betyder det at v\'e6re \ldblquote rettidig\rdblquote ?\par
At man disponere sin tid rigtigt og f.eks. starter med opgaver tidligt frem for sent s\'e5 deadlines kan n\'e5s og kode kan tilrettes?\par
Hvorn\'e5r er et program f\'e6rdigt?\par
N\'e5r programmet g\'f8r som forventet. Virker logisk og man ikke kan finde sm\'e5 fejl i det. Bare fordi man har "l\'f8st" opgaven betyder det ikke programmet er f\'e6rdigt. Da der ikke burde v\'e6re fejl i programmet. Derudover er en god praksis at bede andre udviklere at kigge p\'e5 ens kode for at finde fejl da de sj\'e6ldent kigger p\'e5 koden med samme fejlfrie \'f8jne som en selv?\par
Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Hvad betyder rettigigt?\par
kan man p\'e5 nogen m\'e5de skrive ned hvordan man praktisk kan vudere n\'e5r e tprogram er f\'e6rdigt.\par
\b lektion 0 opgaver\par
\b0 Vurder dig selv i forhold grundighed, rettidighed og vedholdenhed. Overvej f\'f8lgende sp\'f8rgsm\'e5l og skriv dine svar ned.\par
Hvad er du god til? \par
jeg er god til at v\'e6re struktureret og organisere min dag. Derudover er jeg typisk meget grundig i de ting jeg g\'f8r. Jeg er specielt god til engelsk formidling og matematik. Jeg har ogs\'e5 pr\'f8vet at bygge 4-9 computere og forst\'e5r lidt om en computers opbygning. Jeg har ogs\'e5 snuset lidt til forskellige sprog som f.eks. javascript. CSS og SQL. Derudover ogs\'e5 HTML som mere er et markup language. Nu er jeg ogs\'e5 igang med at l\'e6re lidt om command line og github. Her har jeg dog mindre erfaring. Jeg er heller ikke bekymret for at l\'e6re nyt. Jeg kan godt lide at l\'e6re til mig. S\'e5 at pr\'f8ve forskellige sprog af kort er ikke fremmed for mig. Derudover har jeg ogs\'e5 kort pr\'f8vet kr\'e6fter med microsoft power bi og gennemf\'f8rt et kort introduktions kursus vedr\'f8rende dette.\par
Hvordan viser det sig?\par
Jeg er vedholdende i den forstand at selvom jeg ikke har kunne finde en l\'f8sning i et par timer eller dage. S\'e5 fors\'f8ger jeg at vende tilbage til det og ender med at finde en l\'f8sning p\'e5 en eller anden m\'e5de. Hvis jeg er i tvilv vil jeg fors\'f8ge at sp\'f8rge nogen. s\'e5fremt dette er n\'f8dvendigt. I forhold til hvordan det viser sig jeg har snuset lidt til forskellige sprog. s\'e5 har jeg nogle certificerings kurser fra codecademy. i bl.a. javascript. CSS SQL og HTML. Jeg har ogs\'e5 pr\'f8vet at skrive et mindre projekt p\'e5 400 linjer kode. I en text editor som f.eks. visual studio code.\par
Hvad kan du blive bedre til? \par
Github. command line. server. lave egne projekter uden at det er udfra en opgave. Evt pr\'f8ve at arbejde p\'e5 et projekt sammen med andre da jeg ikke har pr\'f8vet dette endnu. Derudover kunne jeg ogs\'e5 blive bedre til at fordybe mig i et enkelt sprog. Jeg ville f.eks. gerne pr\'f8ve at lave en hjemmeside en dag. Hvor jeg skriver alt html og css'en fra bunden af selv. Dette kunne exsempelvis v\'e6re en slags portfolie side.\par
Hvad skal du g\'f8re?\par
jeg kunne f\'e6rdigg\'f8re kurset jeg er igang med p\'e5 codecademy om github og fors\'f8ge at ligge mine forg\'e5ende projekter op p\'e5 en remote direktory. S\'e5dan s\'e5 jeg ikke har det hele p\'e5 et USB stik med mig rundt. Hvor jeg i stedet kan arbejde fra skyen. Dette ville spare meget tbesv\'e6r. Ogs\'e5 hvis dette skulle linkes til en eventuelt portfolie side. Hvor der kunne v\'e6re adskillige links til hvert projekt jeg har arbejdet p\'e5. f.eks.\par
I forhold til det at fordybe mig i et sprog kunne jeg f.eks. pr\'f8ve javascript. Evt ved at gennemf\'f8re en af codecademy's kurser vedr\'f8rende at blive en software developer. Da det antages at dette vil hj\'e6lpe med en mere dybdeg\'e5ende forst\'e5else af dette.\par
Derudover i forbindelse med at arbejde p\'e5 et projekt med andre. s\'e5 kunne jeg endten ops\'f8ge nogle forrumer eller deltage ved nogle open source platforme og evt skrive kode ind til disse. Hvorefter jeg kan afventes at disse godkendes.\par
Til sidst kunne jeg for at forbedre min evne til at lave egne projekter. Kunne jeg f.eks. pr\'f8ve at bygge test hjemmesider til forskellgie firmaer eller koncepter der ikke er ude endnu. F.eks. en minecraft mod side. eller en selvst\'e6ndig virksomheds side. Eller en entrepren\'f8r side til f.eks. h\'e5ndv\'e6rkere. Dette kunne v\'e6re forskellige ideer.\par
\tab Skriv dine svar ned. Brug gerne et par linjer p\'e5 hvert sp\'f8rgsm\'e5l.\par
\par
\b lektion 1\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Brug et par linjer p\'e5 hvert sp\'f8rgsm\'e5l.\par
Hvad er et scope?\par
et scope er hvorhenne i et program kode er skrevet forholdsvis til hinanden. Derudover er det bl.a. praktisesen i at huske f.eks. to tryk p\'e5 mellemrum hver gang man har skrevet i et scope. Dette er n\'f8dvendigt for at bl.a. andre udviklere eller en selv ikke afl\'e6ser kode forkert og indtaster fejl.\par
Hvorfor er indentering vigtig?\par
d\'e5rlig scope eller d\'e5rlig indentering g\'f8r at et program kan afl\'e6se kode forkert eller at udviklere l\'e6ser kode forkert og kommer til at skrive kode der ikke passer til resten af programmet og dermed skaber fejl.\par
Hvorn\'e5r skal man tage sig af indentering?\par
undervejs. ikke til allersidst da dette kan skabe fejl kode der vil resultere i fejl til sidst. Hvis en funktion f.eks. er kaldet ude af scope og dermed ikke kan bruges i den rigtige del af programmes kode.\par
Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
hvad er en funktion?\par
\b Opgaver til lektion 1\par
\b0 tjek visual studio (ikke code) for at se svaret p\'e5 disse opgaver\par
\par
\b lektion 2\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Brug et par linjer p\'e5 hvert sp\'f8rgsm\'e5l.\par
Hvad er Console?\par
Console er et objekt. Hvori bl.a. tekst kan laves eller skrives ind. Derudover er console. Ogs\'e5 et objekt med forskellige metoder vi kan kalde. Alt efter hvilke metoder vi kalder. vil vi kunne skrive kode der vises p\'e5 consollen som tekst. vi kan \'e6ndre placeringen af tekst eller bl.a. \'e6ndre farve p\'e5 teksten eller baggrunden ved konsollen.\par
Hvordan laver man en tom linje i consol\rquote en?\par
Console.ReadKey(); \par
//skal v\'e6re\par
Console.WriteLine();\par
"Console" refererer til console objektet. "." tegnet bruges til at indikere vi vil bruge et af objektets metoder. "ReadKey()" er metoden vi gerne vil bruge p\'e5 "Console" objektet. Derudover kan vi i parantesen skrive parametre. Dette er dog ikke n\'f8dvendigt i dette tilf\'e6lde. til sidst bruger vi ";" tegnet for at indikere at dette lokale scope afsluttes?\par
Hvordan fungerer SetCursorPosition? Hvad betyder x og y?\par
"SetCursorPosition" er en metode til "Console" der bestemmer hvor tekst kan begyndes at skrives fra i en console. Derudover kan der skrives parametre til dette. f.eks. at vi ville have den til at st\'e5 ved helt til venstre og ved linje 2 nedad i consolen. Det ville kunne skrives p\'e5 f\'f8lgende m\'e5de:\par
"Console.SetCursorPosition( 0, 2);"\par
Her bruges kommaet efter 0 til at indikere til programmet at vi vil bruge flere forskellige v\'e6rdier som paramtre p\'e5 SetCursorPosition metoden som derefter bruges p\'e5 objektet.\par
x er den horizontale v\'e6rdi. Y er den verticale v\'e6rdi. dog skal man v\'e6re opm\'e6rksom p\'e5 at i takt med at y g\'e5r opad som tal v\'e6rdi. vil det i en geometrisk forstand g\'e5 nedad. alts\'e5 har y v\'e6rdien lidt det omvendte forhold af et typisk kordinat system.\par
Hvordan skriver vi \ldblquote Davs Claus\rdblquote  p\'e5 sk\'e6rmen uden at rykke en linje ned?\par
Vi antager at dette refererer til consol objektet. vi kan skrive dette i consol objektet. ved f\'f8lgende kode.\par
Console.Write("Davs Claus");\par
Her bruger vi igen console som objektet. Derefter et "." for at indikere en metode er ved at blive brugt. Derefter specificerer vi navnet p\'e5 metoden. Dette er "Write" herefter angiver vi en v\'e6rdi til metoden. Dette skrives immellem "()" tegnene. V\'e6rdien for "Write" metoden er i dette tilf\'e6lde en tekst. ogs\'e5 kaldet en string. Dette kan ses med" "" " tegnene. Dette tegn " skal skrives 1 gang f\'f8r og efter en string ogs\'e5 kaldet en typisk tekst af bogstaver der burde forst\'e5s som dialog. Dermed kan vi afslutte det lokale statement med ";" tegnet og v\'e6re f\'e6rdige med koden til denne instruktion.\par
Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Umiddelbart hvorn\'e5r noget i en metode erkl\'e6res en v\'e6rdi og en parameter og hvad specifikt forskellen p\'e5 dette er.\par
\b Opgaver til lektion 2\par
\b0 tjek visual studio (ikke code) for at se svaret p\'e5 disse opgaver\par
\par
\b lekition 3\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Brug et par linjer p\'e5 hvert sp\'f8rgsm\'e5l.\par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li1080\sa200\sl276\slmult1 Hvad er forskellen p\'e5 double og int?\line\line double refererer til decimal tal. int referrer til hele tal. int refererer alts\'e5 til tal uden komma.\par
{\pntext\f0 2.\tab}Hvordan fungerer plus, minus, gange og dividere p\'e5 \par

\pard 
{\pntext\f0 a.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pnlcltr{\pntxta.}}
\fi-360\li1440\sa200\sl276\slmult1 Integers? plus for\'f8ger integers tallet til venstre for + tegnet's v\'e6rdi. Minus s\'e6nker tallet til venstre med tallet til h\'f8jre fra - tegnet. Gange tager tallet til venstre for * tegnet og gentager det med det tal der st\'e5r til h\'f8jre fra * tegnet. herfefter ligges denne v\'e6rdi sammen. f.eks.\line 3*9 = 27\line her tages v\'e6rdien til venstre for "*" tegnet ogs\'e5 kaldet gange tegnet. Dette tal gentages med sig selv det antal gange der st\'e5r til h\'f8jre. Herfefter ligges det sammen. Regnet stykket kunne ogs\'e5 se s\'e5dan ud her. Det er en anden m\'e5de at skrive samme udregning p\'e5.\line 3+3+3+3+3+3+3+3+3 = 27\line Dividere tager tegnet til venstre for "/" tegnet og fordeler v\'e6rdien til venstre for tegnet over det antal som tal v\'e6rdien til h\'f8jre for tegnet har f.eks.\line 12/4= 3\line her tages v\'e6rdien 12 og fordeles over v\'e6rdien til h\'f8jre. Dette resulterer i v\'e6rdien 3. Nogle gange s\'e5 bliver en integer ("int" ogs\'e5 kaldet helt tal) til en double (Ogs\'e5 decimal tal) og omvendt.\par
{\pntext\f0 b.\tab}Doubles?  plus for\'f8ger integers tallet til venstre for + tegnet's v\'e6rdi. Minus s\'e6nker tallet til venstre med tallet til h\'f8jre fra - tegnet. Gange tager tallet til venstre for * tegnet og gentager det med det tal der st\'e5r til h\'f8jre fra * tegnet. herfefter ligges denne v\'e6rdi sammen. f.eks.\line 2,22*11 = 24,42\line her tages v\'e6rdien til venstre for "*" tegnet ogs\'e5 kaldet gange tegnet. Dette tal gentages med sig selv det antal gange der st\'e5r til h\'f8jre. Herfefter ligges det sammen. Regnet stykket kunne ogs\'e5 se s\'e5dan ud her. Det er en anden m\'e5de at skrive samme udregning p\'e5.\line 2,22+2,22+2,22+2,22+2,22+2,22+2,22+2,22+2,22+2,22+2,22= 24,42\line Dividere tager tegnet til venstre for "/" tegnet og fordeler v\'e6rdien til venstre for logoet over det antal som tal v\'e6rdien til h\'f8jre for logoet har f.eks.\line 4,56/3= 1,52\line her tages v\'e6rdien 4,56 og fordeles over v\'e6rdien til h\'f8jre. Dette resulterer i v\'e6rdien 1,52. Nogle gange s\'e5 bliver en integer ("int" ogs\'e5 kaldet helt tal) til en double (Ogs\'e5 decimal tal) og omvendt.\par
{\pntext\f0 c.\tab}Strings? strings kan kun benyttes med en + (ogs\'e5 kaldet plus) operat\'f8r i mods\'e6tningen til doubles og integers som kan bruge adskillige. bl.a. + (ogs\'e5 kaldet plus) - (og\'e5s kaldet minus) * (ogs\'e5 kaldet gange) / (ogs\'e5 kaldet dividere) Alts\'e5 kan strings kun benyttes med et plus tegn. et eksempel p\'e5 dette kunne f.eks. v\'e6re:\par

\pard\li1800\sa200\sl276\slmult1\b string\b0  vejr = "Solen skinner";\par
string vejrTilf\'f8jelse = "og det er dejligt";\par
string vejrsBeskrivelse = vejr + " " + vejrTilf\'f8jelse;\par
Console.WriteLine(vejrsBeskrivelse);\par
// output: "Solen skinner og det er dejligt"\par

\pard\li720\sa200\sl276\slmult1 3. Hvordan kan man l\'e6gge 3 til variablen index?\par
vi ved ikke om variablen er en int eller en double. dog kan vi skrive f\'f8lgende f.eks.:\par
index + 3\par
Dette burde resultere i en ny v\'e6rdi til index.. vi ved ikke hvad v\'e6rdien p\'e5 index er. dermed kan vi endnu ikke f\'e5 et resultat. dog hvis vi antog index havde en v\'e6rdi p\'e5 f.eks. 5. s\'e5 ville det printe f\'f8lgende:\par
5 + 3 = index\par
dette ville umiddelbart kunne give index en ny v\'e6rdi. i dette tilf\'e6lde ville index nye v\'e6rdi blive 8 og ikke 5 l\'e6ngere. Hvis vi s\'e5 ville have konsollen til at outputte dette s\'e5 kunne vi f.eks. skrive f\'f8lgende:\par
Console.WriteLine(index);\par
// output 8.\par
Dette ville bede konsollen om at outputte v\'e6rdien af index. til dette bruger vi metoden .WriteLine() p\'e5 objektet "Console". herefter kaldes v\'e6rdien til index. Dette vil printe v\'e6rdien for index i konsollen. Alts\'e5 8.\par
4. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Er alle decimal tals v\'e6rdier doubles eller er der andre navne til disse? kort svar ja. dog ikke n\'f8dvendige endnu.\par
derudover skal man skrive string. int eller double foran alle variabler inden disse bestemmes eller burde dette n\'e6rmere forst\'e5s som en beskrivelse der minder lidt om en kommentar.\par
5. Nedskriv en kort beskrivelse af hvad hvert udtryk betyder\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1 Variabel\par

\pard\sa200\sl276\slmult1 et objekt? i C# ja. dog ikke n\'f8dvendigvis i andre sprog. Variabler kan indeholde en v\'e6rdi og kan bruges til diverse funktioner bl.a.\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1 Datatype / type\par

\pard\sa200\sl276\slmult1 datatyper er forskellige klasser til bl.a. variabler eller v\'e6rdier generelt. et eksempel fra alment sprog. er et ord. Et ord kan v\'e6re en af mange forskellige klasser. f.eks. navneord. till\'e6gsord eller verbum. Det samme g\'e6lder lidt varabler og datatyper. Her er variablen f.eks. et ord og datatypen er ord klassen. Hvis man skulle sammenlinge det. datatype eksempler er bl.a. "string". "int" eller "double".\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li1440\sa200\sl276\slmult1 Operator\b\par

\pard\sa200\sl276\slmult1\b0 en operat\'f8r er f.eks. "+", "-", "*" eller "/". disse bruges f.eks. til at tildele v\'e6rdier til variabler eller andet. Forskellige data typer kan bruges med forskellige operat\'f8rer.\par
\b\par
lekition 4\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Brug et par linjer p\'e5 hvert sp\'f8rgsm\'e5l.\par
Lav opgave 4.1 i C# opgavesamling. Hvad er forskellen p\'e5 do og do-while loops?\par
do k\'f8rer koden oplyst inde i \{\} tegnene udne at vente og checke om v\'e6rdien matcher kriterierne f\'f8r efter koden er f\'e6rdigt med at have k\'f8rt en gang mindst. Derimod s\'e5 er while anderledes og checker f\'f8rst koden immelem \{\} tegnene s\'e5dan s\'e5 den sikrer sig kriterierne matcher inden denne kode k\'f8res igennem. hvis dette ikke er tilf\'e6ldet vil koden ikke k\'f8re.\par
Hvad er forskellen p\'e5 == og =?\par
== sammenligner kode hvor = s\'e6tter f.eks. en variabels v\'e6rdi.\par
f.eks.\par
a == 4 \par
dette sammenligner om a og 4 har samme v\'e6rdier. hvis det har vil det vudereders som sandt og dermed med et console.writeline statement printes til consollen.\par
hvorimod hvis der st\'e5r:\par
a = 4\par
s\'e6tter vi v\'e6rdien eller variablen 'a' til v\'e6rdien 4 uanset om a havde en anden v\'e6rdi inden dette eller ej.\par
Hvad er forskellen p\'e5 (a > b) og (a >= b)\par
(a > b) checker om a har en st\'f8rre v\'e6rdi end b. s\'e5fremt dette er rigtigt vurderes dette som sandt og dermed vil resterende kode oftest blive k\'f8rt igennem.\par
Hvordan angiver vi at et loop skal stoppe n\'e5r variablen counter er st\'f8rre end 10?\par
det kan vi g\'f8re med f\'f8lgende:\par
while(counter <  10) \{\par
.....\par
\}\par
vi bruger while loopet s\'e5 vi f\'e5r koden til at tjekke om vores kriterier er sande inden denne kode k\'f8res igennem. Derudover ved vi vi gerne vil have counteren til at v\'e6re st\'f8rre end 10. dermed indikerer vi med < tegnet at loopet skal forts\'e6tte med at k\'f8re imens counter er udner 10. dermed ved computeren at koden skal stoppe n\'e5r dette er over 10. herfra kan vi s\'e5 tilf\'f8je at counter skal plusses med 1 hver gang dette loop k\'f8rer. et eksempel kunne se s\'e5ledes ud.\par
counter = 5\par
while(counter < 10 ) \{\par
\tab counter = counter + 1;\par
\tab Console.WriteLine(counter);\par
\}\par
dette vil give os f\'f8lgende output\par
// 6 7 8 9 10\par
hvor dette gentages og hvert tal kan ses som et nyt trin p\'e5 en stige hvor hver gang plusses counter med 1 og derefter s\'e6ttes som den nye counter v\'e6rdi hver gang.\par
HVordan forts\'e6tter vi loopet s\'e5 l\'e6nge variablen input er forskellig fra \ldblquote quit\rdblquote ?\par
while(input != "quit") \{\par
...\par
\}\par
kode for loopet kan skrives ved de 3 punktummer "..."\par
Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
er de her svar rigtige?\par
\b\par
Lektion 5\b0\par
Arbejdssp\'f8rgsm\'e5l\par
\tab 1. Hvis du beder brugeren om at indtaste f eks sin alder, hvilken type skal du bruge til den variabel, der skal indeholde indtastningen?\par
Det kommer an  p\'e5 hvad det skal bruges til. Hvis det er til at levere en tekst besked tilbage til en bruger. S\'e5 ville jeg anbefale string. Da tal godt kan vises som strings. Dog hvis dette skal bruges i en form for udregning s\'e5 ville jeg bruge string f\'f8rst og derefter bruge convert objektet til at \'e6ndre int v\'e6rdien bagefter til et tal med int v\'e6rdien eller double v\'e6rdien alt efter hvilken slags tal vi \'f8nsker eller forventer fra en bruger.\par
\tab 2. Hvad er forskellen p\'e5 ReadKey og ReadLine?\par
ReadKey(); mener jeg pauserer programmet indtil der er en bruger indtastning med et keyboard. Hvorimod ReadLine(); vil tjekke og gemme brugerens indtastning hvilket vi kan bruge til adskillige ting som udvikler.\par
// rettelse: ReadKey(); pauserer programmet indtil et tegn tastes. Hvorimod ReadLine(); pauserer programmet indtil der trykkes p\'e5 enter hvorimod alt skrevet p\'e5 linjen retuneres.\par
\tab 3. Hvordan \'e6ndrer vi \ldblquote 88\rdblquote  til 88?\par
jeg ville g\'f8re det s\'e5dan her: \par
Console.Write("Indtast antal af \'e6bler -> ");\par
string \'e6bleTekst = Console.ReadLine();\par
int \'e6bleTal = Convert.ToInt88(\'e6bleTekst);\par
Console.Write(\'e6bleTal);\par
Dette mener jeg ville give outputtet f.eks. hvis brugeren skrev 88.\par
// output: Indtast antal af \'e6bler -> 88\par
\tab 4. Hvad vil det sige at konvertere (convert) en variabel?\par
Det vil sige at \'e6ndre variabel typen fra f.eks. tekst (string) hen til en tal v\'e6rdi (integer eller double.) Det tilsvarrende i alment sprog kunne v\'e6re at lave f.eks. \'e6bler om til frossede \'e6bler eller til en \'e6ble juice.\par
\tab 5. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Er de her svar rigtige? hvorfor skriver man ToInt32 ved eksemplet? skal man s\'e5 vide en brugers alder f.eks. for at kunne omdanne deres tekst v\'e6rdi til et tal eller? \par
//svar. ToInt32 refererer til at det konverteres til int med 32 bit. dette kan ogs\'e5 g\'f8res med 16 eller 64. Dog anbefales 32 i de fleste tilf\'e6lde i f\'f8rste omgang. Da dette er defaulten.\par
Er mine svar p\'e5 dette for korte?\par
//svar. De er ikke for korte s\'e5 l\'e6nge de besvarer sp\'f8rgsm\'e5lene tilstr\'e6kkeligt. --Jakob.\par
\b\par
Lektion 6\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Skriv svarene ned. Brug et par linjer p\'e5 at besvare hvert sp\'f8rgsm\'e5l:\par
Hvad er en metode?\par
En metode er oftest noget kode der udf\'f8rer en delopgave i et program. Metoder er ofte effektive at bruge i tilf\'e6lde hvor en specific kode block skal bruges flere gange. F.eks. Hvis vi ofte skulle taste forskellige navne v\'e6rdier ind p\'e5 en login side f.eks. s\'e5 kunne vi skrive en metode for at skulle slippe for at skrive koden forfra hver gang.\par
Hvorfor er metoder smarte?\par
De kan bruges til at genbruge den samme kode uden at skulle skrive den forfra hver gang. Nogle gange kan det v\'e6re hurtigere at skrive en metode for en del af et program i stedet for kun at skrive koden s\'e5 det kun kan bruges det ene sted. I tilf\'e6lde hvor vi ved vi kommer til at skulle bruge lignende kode igen senere.\par
Hvad er en parameter?\par
En paramter kan der v\'e6re flere eller en af. Paramtere kan f.eks. v\'e6re en tidligere variabel der bruges p\'e5 en metode. Rettere specifcce instructioner til en metode?\par
//rettelse : En paramter kan der v\'e6re flere eller en af. Paramtere kan f.eks. v\'e6re en tidligere variabel der bruges p\'e5 en metode.\par
Hvilke typer kan bruges som parametre? \par
Strings. integers. doubles osv.?\par
Hvad er en returv\'e6rdi?\par
en returv\'e6rdi er en v\'e6rdi der kan blive retuneret til konsollen i tilf\'e6lde af at noget forg\'e5ende koede resulterer i et sandt udfald. \par
//tilf\'f8jelse. kan maks have en retur v\'e6rdi. Derudover kan returv\'e6rdier f.eks. oftest v\'e6re variabler eller andet.\par
Hvorn\'e5r er en metode ogs\'e5 en funktion?\par
En metode er ogs\'e5 en funktion n\'e5r den retunere alt andet end void. i tilf\'e6lde af at en metode retunerer void s\'e5 er det kun en metode og ikke en funktion.\par
Har du sp\'f8rgsm\'e5l til dette karpitel? skriv dem ned\par
er svar til parameter og typer parametre rigtige? \par
jeg forst\'e5r ikke helt syntaxen. hvad g\'f8r [] og args i metode eksemplerne??\par
//svar. [] indikerer at variablen er en array. derudover string som st\'e5r foran indikerer at variabel typen er en string (tekst) til sidst navngives variablen med navnet "args" som er en forkortelse for arguments. Dette kunne sagtens v\'e6re noget andet.\par
\par
\b Lektion 7\b0\par
Arbejdssp\'f8rgsm\'e5l\par
Skriv svarene ned. Brug et par linjer p\'e5 at besvare hvert sp\'f8rgsm\'e5l:\par
Hvad kan man bruge if til?\par
If kan bruges til at specificere f.eks. hvilket slags output et program skal k\'f8re alt efter hvilke specifikationer der angives til det.\par
f.eks. kan vi sige hvis en b\'f8f er fra en okse. s\'e5 kan outputtet v\'e6re at "det er en l\'e6kker b\'f8f" hvorimod hvis det er lammek\'f8d s\'e5 kunne outputtet f.eks. v\'e6re "det er ikke en b\'f8j jeg kan lide." vi kan og\'e5s i stedet for output beskrive forskellige variabler eller \'e6ndre p\'e5 variabler efter dette. Vi kunne f.eks. \'e6ndre en int variabel til en string hvis int variablen var over 10. bl.a.\par
Hvad er forskel p\'e5 if - else og if - else if?\par
If - else. indikerer starten og slutningen p\'e5 et if else statement. If er n\'f8dvendigt i et if else statement. If specificerer en bestemt omst\'e6ndighed. Hvorimod else ogs\'e5 er n\'f8dvendig. Dog er "else" et standard svar, output eller bestemmelse der vil k\'f8re s\'e5fremt if statementet ikke er sandt eller matcher noget kode i et program.\par
Derimod er" if" - "else if" if ikke helt det samme. "If" er i dette tilf\'e6lde helt ens med en "if" fra et "if else" statement. Dog er der forskel p\'e5 "else" og "if else". else slutter et program af. Hvorimod else if er en forl\'e6ngelse af if statementet og en m\'e5de at skrive flere forksellige udfald. eller bestemmelser til koden. Der vil k\'f8re s\'e5fremt disse vuderes som sande.\par
Hvad vil det sige at neste if-s\'e6tninger?\par
hvis vi f.eks. har f\'f8lgende eksempel:\par
If(name == "brian")\par
\{\par
\tab Console.WriteLine("Han har en fed bil");\par
\tab if \{cap == "Monster Energy"\} \par
\tab\{\par
\tab\tab Console.WriteLine("og er en \'e6gte brian");\par
\tab\}\par
\}\par
else\par
\{\par
\tab  Console.WriteLine("ikke relevant");\par
\}\par
s\'e5 vil vores if med en monster energy cap kun blive checket ved folk der hedder brian. hvis en person i vores kode ikke hedder brian og har en monster cap. s\'e5 vil de ikke blive kaldt for en \'e6gte brian. Alts\'e5 nestede if s\'e6tninger k\'f8res kun igennem s\'e5fremt deres "parent" kode vurderes som sand.\par
Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
er dette rigtigt forst\'e5et?\par
//svar. det er det if\'f8lge Jakob.\par
\par
\b lektion 8\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Skriv svarene ned. Brug et par linjer p\'e5 at besvare hvert sp\'f8rgsm\'e5l:\par
Hvilke v\'e6rdier kan en Bool have?\par
En bool kan have v\'e6rdien true eller false. det kan bl.a. angives som en type variabel lidt ligesom at en variabel kan v\'e6re en string, double, eller integer f.eks. s\'e5 kan den ogs\'e5 angives eller v\'e6re en bool. bool angiver typisk kun 2 v\'e6rdier. true eller false. Disse v\'e6rdier kan ogs\'e5 vendes om hvis der bruges et !.\par
Hvad er et logisk AND?\par
Et logisk AND kan f.eks. bruges i if else statements. syntaxen kan f.eks. se s\'e5ledes ud:\par
if(basketballSpiller && h\'f8j && h\'e5rdtArbejdende)\par
\{\par
Console.WriteLine("Han kunne godt have talent.);\par
\}\par
else \par
\{\par
Console.WriteLine("Han ser ud til at more sig. Han er dog ikke relevant.");\par
\}\par
et logisk AND (&&) bruges f.eks. n\'e5r et if else statement kun skal k\'f8re n\'e5r alle variablerne eller parametrene evalueres til true (alts\'e5 sande). Det vil sige hvis personen f.eks. er en basketball spiller og h\'f8j men ikke h\'e5rd arbejdende s\'e5 vil terminalen eller programmet skrive: "Han ser ud til at more sig. Han er dog ikke relevant. Da alle udsagnene i et logisk AND skal v\'e6re sande.\par
Hvad er et logisk OR?\par
et logisk OR (eller ||) bruges n\'e5r bare et af flere udsagn skal v\'e6re sande for at et program skal k\'f8re. Hvis der tages udgangspunkt i eksemplet fra f\'f8r:\par
if(basketballSpiller || h\'f8j || h\'e5rdtArbejdende)\par
\{\par
Console.WriteLine("Han kunne godt have talent.);\par
\}\par
else \par
\{\par
Console.WriteLine("Han ser ud til at more sig. Han er dog ikke relevant.");\par
\}\par
Det overst\'e5ende eksempel kode vil k\'f8re hvis bare personen endten var h\'f8j, en basketballspiller eller h\'e5rdarbejdende. Da kun et af variablerne eller parametrene beh\'f8ves at v\'e6re sande for at kode blocken skal kunne k\'f8re.\par
Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Er dette rigtigt forst\'e5et? specielt i forhold til det f\'f8rste sp\'f8rgsm\'e5l med ! tegnet og om at v\'e6rdierne vendes om.\par
\par
\b Lektion 9\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Skriv svarene ned. Brug et par linjer p\'e5 at besvare hvert sp\'f8rgsm\'e5l:\par
\tab 1. Hvad er forskellen p\'e5 en string og en char?\par
En string er en variabel type der kan indeholde en sammens\'e6tning af flere forskellige tegn. Hvorimod en char er en variabel type der kun kan indeholde et tegn?\par
\tab 2. Hvordan finder du l\'e6ngden p\'e5 en string?\par
l\'e6ngden p\'e5 en string kan findes med .Lenght egenskaben. f.eks. med f\'f8lgende eksempel.\par
string navn = "Peter"\par
Console.WriteLine("L\'e6ngde p\'e5 navn: " + navn.Lenght);\par
//output: L\'e6ngde p\'e5 navn: 5\par
\tab 3. Hvad best\'e5r en string af?\par
En string best\'e5r typisk af adskillige bogstaver. tekst. tegn elle tal. Den l\'e6ser dog ikke tal som tal v\'e6rdier. Den l\'e6ser kun tal som tekst. Alts\'e5 kan tal skrevet ind i en string ikke bruges medmindre de konverteres til f.eks. en double eller int variabel type.\par
\tab 4. Hvad index (nummer) har f\'f8rste plads i en string?\par
F\'f8rste index nummer p\'e5 en string er 0 og kan angives ved tegn efter variabel navnet. S\'e5dan her f.eks. med variablen navne.: \par
Console.WriteLine(navne[0]);\par
//output: n\par
\tab 5. Hvad index (nummer) har sidste plads i en string?\par
sidste index nummer har pladsen: .Lenght-1\par
med en variabel ved navn biler. Kan vi skrive f\'f8lgende\par
string biler = "Toyota, BMW og Audi"\par
Console.WriteLine(biler[biler.Lenght-1])\par
//output: i\par
\tab 6. Hvad kan IndexOf()?\par
IndexOf() kan s\'f8ge efter bestemt tekst i en string og vidergive tekstens placering i en variabel og bruges typisk som en egenskab til en variabel. Det kan f.eks. skrive s\'e5dan:\par
string bestBasketPlayer = "Kobe Bryant is the best basketballplayer in history"\par
bestBasketPlayer.IndexOf("best")\par
//output: 19\par
\tab 7. Hvordan tr\'e6kke man f. Eks. et enkelt ord ud af en string? For eksempel tr\'e6k "Corona" ud af strengen string eksempel="P\'e5 grund af Corona arbejder vi hjemme";\par
Det kunne g\'f8res med f\'f8lgende eksempel:\par
int indexOfCorona = eksempel.indexOf("Corona");\par
string subString = eksempel.Substring(indexOfCorona, "Corona".Lenght);\par
Console.WriteLine(subString);\par
//output: Corona\par
\tab 8. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
jeg forst\'e5r ikke helt substring. jeg er med p\'e5 hvad den g\'f8r. Dog ikke hvordan den g\'f8r og slet ikke syntaxen desv\'e6rre.\par
er .Lenght en indbygget metode i C#? eller er det en egenskab der er indbygget i sproget? eller noget helt tredje.\par
//svar: det er en indbygget egenskab i sproget.\par
\tab 9. Nedskriv en kort beskrivelse af hvad hvert udtryk betyder\par
Index:\par
Hvorhenne i f.eks. en string variabel at et eller flere tegn har placering. Typisk angivet med tal.\par
Position\par
betyder det samme som index. En numerisk v\'e6rdi for noget i f.eks. en string variabel.\par
Whitespace\par
typisk mellemrummer. Der kan fjernes med f.eks. .Trim() egenskaben.\par
\par
\b Lektion 10\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Skriv svarene ned. Brug et par linjer p\'e5 at besvare hvert sp\'f8rgsm\'e5l:\par
\tab 1. Hvordan s\'e6tter man v\'e6rdier fra variabler ind i sit output?\par
V\'e6rdier fra variabler kan s\'e6ttes ind ved ens output p\'e5 f.eks. f\'f8lgende m\'e5de:\par
string sNavnEt = "Brian"\par
int iAlderEt = "17"\par
Console.WriteLine("\{0\} er \{1\} \'e5r gammel og k\'f8rer i en tunet fiat multipla.", sNavnEt, iAlderEt);\par
// output: Brian er 17 \'e5r gammel og k\'f8rer i en tunet fiat multipla.\par
forklaring: her bruges "\{\}"  at angive hver gang en variabel skal inds\'e6ttes som en v\'e6rdi til console.writeline() f.eks. I slutningen af vores statement skriver vi et , efter " " " tegnet. Derefter angiver vi hver variabel der skal bruges adskilt af et komma imellem hver. Til sidst skriver vi i \{\} tegnene for tidligere hvilken variabel vi \'f8nsker at refererer til hvor. Dette g\'f8r vi med lidt samme m\'e5de som med indeksering. Alts\'e5 at 0 er = den f\'f8rste kaldte variabel ved endten af statementet i den ene metode eller funktion?\par
\tab 2. Kan vi bestemme antallet af decimaler p\'e5 en double? Hvordan?\par
antallet af decimaler p\'e5 en double kan angives ved at skrive f.eks. f\'f8lgende.\par
string sNavnTo = "Laudrup";\par
double dH\'f8jdeP\'e5NavnTo = 1.78192;\par
Console.WriteLine("\{0\} er \{1:N2\} m h\'f8j. Han ser h\'f8jere ud end det.", sNavnTo, dH\'f8jdeP\'e5NavnTo);\par
// Output: Laudrup er 1.78 m h\'f8j. Han ser h\'f8jere ud end det.\par
forklaring: her skriver vi \{1:N2\} ved den 2. parantes for at specificere f\'f8lgende:\par
N specificerer at det er et number der er at g\'f8re med.\par
2 efter N angiver at det er maks 2 decimaler der tages med til outputtet fra venstre til h\'f8jre af tallet.\par
\tab 3. Hvad betyder \{1,-8\}?\par
\{1,-8\} betyder at vi gerne vil tage den f\'f8rste variabel i et eksempel og give den en plads der fylder fra start venstre af variablens brug og frem til h\'f8jre p\'e5 8 tegn i alt. Havde -8 v\'e6ret 8 i stedet s\'e5 havde det v\'e6ret fra start af variablens brug mod venstre. Pladsen ville s\'e5 fylde 8 mod venstre fra h\'f8jre i stedet.\par
F.eks.\par
string sNameEt = "Brian";\par
int iAntalAfBiler = 5;\par
Console.WriteLine("\{0,-10\} har haft \{1,2\} tunede biler", sNameEt, iAntalAfBiler);\par
//output: Brian      har haft  5 tunede biler\par
alts\'e5 kan vi f.eks. lave whitespace eller andre ting med denne metode eller egenskab?\par
\tab 4. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
usikker p\'e5 om console.writeline er en metode eller noget andet.\par
//svar: det er en metode.\par
Er \{\} en metode eller en funktion eller en egenskab i overst\'e5ende tilf\'e6lde. Jeg g\'e6tter p\'e5 egenskab da der ikke er paranteser. Dog ikke sikker.\par
//svar: en del af syntaxen. ikke en metode, ikke en funktion og ikke en egenskab.\par
\par
\b Lektion 11\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
Skriv svarene ned. Brug et par linjer p\'e5 at besvare hvert sp\'f8rgsm\'e5l:\par
\tab 1. Hvordan er et for loop forskelligt fra et while eller et do-while loop?\par
Et for loop kan erkl\'e6re en variabel som en del af dens parametre i parantesen der s\'e6ttes i starten efter "for" erkl\'e6ringen. Hvorimod et while eller do while loop skal have erkl\'e6ret variablen inden den bruges.\par
//svar: rettelse. Hele for loopets erkl\'e6ring er samlet kompakt. Hvormid det er delt op i 3 i et do while loop. De kan det samme. Det er dog nemmere ikke at skulle holde styr p\'e5 3 dele af et loop f.eks. inden under og efter loopets kode. Hvor man i stedet kan n\'f8jes med at skrive det efter for erkl\'e6ringen.\par
\tab 2. Hvad er for-loops s\'e6rligt egnede til?\par
Strenge og arrays. F.eks. at finde indxe i dem. eller kigge dem igennem efter en specific v\'e6rdi eller lignende?.\par
\tab 3. Kan et for-loop kun t\'e6lle op med en af gangen?\par
Nej et for loop kan t\'e6lle op med 2 eller mere hvis det er aktuelt. \'d8nsket eller n\'f8dvendigt.\par
\tab 4. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
skal jeg g\'f8re mine svar l\'e6ngere?\par
//de er fine. korte og pr\'e6cise. S\'e5 det beh\'f8ves ikke.\par
\par
\b Lektion 12\b0\par
Arbejdssp\'f8rgsm\'e5l\par
\tab 1. Hvor mange slags data kan man have i \'e9t array?\par
Man kan b\'e5de have strings. Doubles. Integers, bools og jeg tror ogs\'e5 chars. Dog SKAL der maks v\'e6re en slags unik data type. Alts\'e5 kan man sagtens have mange strings eller doubles. Dog kan man ikke have b\'e5de strings og doubles i samme array. I det tilf\'e6lde skal man s\'e5 lave seperate arrays. Som f.eks.\par
string[] briansBiler = \{ "bmw", "audi", "fiat multipla", "fort escort" \};\par
double[] briansBilPriser = \{ 8808.02, 105020.2552, 30468.573, 5014.311\};\par
her angiver vi at vi laver en array med typen af array efterfulgt af "[]" tegnene. Derefter angiver vi v\'e6rdierne der skal inds\'e6ttes i array'en som i princippet er adskillige variabler af den type der blev angivet i starten. Derefter angiver vi et navn til denne samling af variabler i en array. I dette tilf\'e6lde briansBilPriser og briansBiler. Efter dette s\'e6tter vi denne array = nogle variabler eller v\'e6rdier. Dette skriver mellem \{\} tegnene og hver ny v\'e6rdi adskilles med et komma. Til sidst afsluttes der med semicolon for at fort\'e6lle programmet arrayen er f\'e6rdig skrevet?\par
\tab 2. Hvor stort kan et array v\'e6re?\par
Jeg antager et array i princippet kan v\'e6re s\'e5 stort som man \'f8nsker s\'e5 l\'e6ngde de er af samme type inde i arrayen. Dog er der halv undtagelser hvor f.eks. en double eller int kan skrives ind ved at angive dem med "". Dog skal man v\'e6re opm\'e6rksom p\'e5 de skal konverteres til double eller int hvis de skal bruges til nogle udregninger.\par
\tab 3. Er det muligt at lave et array af double?\par
Ja det er det da arrays kan v\'e6re af adskillige typer s\'e5 l\'e6nge indholdet i arrayen er af samme type.\par
\tab 4. Hvordan laver man et array der kan indeholde 5 strings?\par
jeg ville g\'f8re det p\'e5 f\'f8lgende m\'e5de.\par
string[] briansTypiskeS\'e6tninger = \{ "Er du gal en shakal", "Kald mig lynet mcqueen", "Se lige de f\'e6lge der", "hastighedsgr\'e6nsen er en social konstruktion" \}\par
her erkl\'e6res det at vi laver en array med teksten "string[]" Der angives det at typen er en string og vi gerne vil have det til at v\'e6re en array. Alts\'e5 en samling af strings. Derefter giver vi arrayen en eller flere v\'e6rdier. Det g\'f8r vi med = tegnet efterfulgt af \{\} tegnene hvorefter v\'e6rdien eller v\'e6rdierne kan skrives imellem \{\} tegnene. Til sidst afsluttes der med semicolon.\par
\tab 5. Hvad nummer har det fjerde element i et array?\par
ligesom index. Alts\'e5 det akutelle tal minus 1. Alts\'e5 i dette tilf\'e6lde 3. eller f.eks. \{3\} hvis det skulle skrives i en af mange programmerings eksempler.\par
\tab 6. Hvad nummer har det sidste element i et array?\par
arrayNavn.Length-1\par
f\'f8rst angives arrayens navn. Efterfulgt af .Lenght egenskaben. Hvorefter til sidst denne minuses med 1 s\'e5 vi har det reelle index nummer i arrayen til sidst da indexer er 1 tal mindre end de akutelle tal.\par
\tab 7. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Kan en array godt have en v\'e6rdi og stadig blive kaldt en array? eller refererers det til som en variabel s\'e5 selvom koden er anderledes og ville dette i s\'e5 fald v\'e6re d\'e5rlig praksis?\par
Derudover er mine svar rigtigte?\par
\par
\b Lektion 13\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
\tab 1. Hvad er en library function?\par
jeg vil antage at library functions er functioner der ikke beh\'f8ves at skabes p\'e5 samme m\'e5de som en metode skabt via static void kommanden f.eks. Det er rettere functioner bygget ind til objekter i et specifikt kode sprog. i Dette tilf\'e6lde C#. Som f.eks. converts objektets functioner .ToInt32 eller .ToDouble eller ToString?\par
\tab 2. Hvorn\'e5r bruger man et library?\par
Jeg kunne ikke helt finde svaret i teksten. Jeg antager dog man bruger et library n\'e5r man bruger pr\'e6 definerede funktioner der findes i et kode sprog. som f.eks. .setcursorposition. hvorimod funktionen briansForbrugUdregner() ikke er indbygget som en del af C# men rettere en function skabt af brugere. Dermed kommer den ikke som en pr\'e6definerert funktion da den skulle kaldes f\'f8rst.\par
\tab 3. Hvad kan Math?\par
Math kan forskellige ting. Dog ting indenfor matematikkens verden. Det kan bl.a. v\'e6re math.Pow() hvor .Pow er en library function der tager imod af bl.a. 2 parametre af tal. Det f\'f8rste tal er tallet der skal ganges op med sig selv. Det andet tal er antallet af gange det skal ganges op med sig selv. Eller math.Pi som er p\'e5 der kan bruges til adskillige udregninger.\par
\tab 4. Hvordan angiver man hvor stort et tilf\'e6ldigt tal maksimalt kan v\'e6re?\par
Dette kan g\'f8res med Rand.Next(). Dette tager bl.a. 2 eller 1 parametre f.eks. i parantesen adskilt af et komma. Her er det sidste af de 2 tal eller det ene tal -1 den maksimale potentielle v\'e6rdi for talet. Alts\'e5 skrev man Rand.Next(52) ville man kunne f\'e5 et tilf\'e6ldigt tal mellem 51 og 0. alts\'e5 maksimalt 52-1= 51 alts\'e5 51.\par
\tab 5. Hvilke library objects kender du?\par
Math. Console. Convert. Thread. bl.a.\par
\tab 6. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Er mine svar tilstr\'e6kkelige.\par
//svar: helt fint.\par
\par
\b Lektion 14\par
\b0  Arbejdssp\'f8rgsm\'e5l\par
\tab 1. Hvad kan DateTime?\par
Datetime kan indeholde et timestamp. Alts\'e5 oplysninger om dag, m\'e5ned \'e5r sekunder minut osv. Alts\'e5 f\'f8lgende r\'e6kkef\'f8lge: \'c5\'c5\'c5\'c5 MM DD M S\par
\tab 2. Hvordan laver man en DateTime der angiver d. 2 november 1969?\par
DateTime dtTidligereDato = new DateTime(1969, 11, 2);\par
Console.WriteLine(dtTidligereDato);\par
//output:\par
//1969 11 2\par
\tab 3. Hvad er 5 % 4?\par
1. Grundet 5 divideret med 4 giver 1 med 1 til rest. og % i dette tilf\'e6lde refererer til heltalsdivisionens rest. Alts\'e5 1\par
\tab 4. Hvad er 9 % 3?\par
0. Grundet 9 divideret med 3 giver 0 da der ikke er nogen rest ved denne hel tals division.\par
\tab 5. Hvad kan modulus?\par
Modulus bruges til at finde rest v\'e6rdien for et stykke med hel tals division. Modules tegnet ser s\'e5ledes ud: "%". Det kan skrives s\'e5dan her:\par
Console.WriteLine(12 % 5);\par
//output: 2\par
svar: grundet 12 divideret med 5 er 2. Det giver 10. For s\'e5 at finde resten kan man s\'e5 sige 12-10=2. alts\'e5 er svaret 2 for modules (eller %).\par
\tab 6. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
er mine svar tilstr\'e6kkelige? eller skal de uddybes mere? derudover antager jeg at outputtet for DateTime er det samme som syntaxen den tager imod alts\'e5 at \'e5r outputtes f\'f8rst og ikke sidst som f.eks. i eksemplerne. Antager det er rigtigt er dog ikke sikker.\par
\par
\b Lektion 15\par
\b0 Arbejdssp\'f8rgsm\'e5l\par
\tab 1. Hvad er forskellen p\'e5 switch case og if else?\par
If else kan bruges f.eks. med string v\'e6rdier eller bool v\'e6rdier. Hvorimod det umiddelbart virker til switch cases kun kan bruges til int v\'e6rdier. Fordelen ved dette er syntaxen umiddelbart er kortere. Dog er der ikke liges\'e5 mange mulighed for brug af dette.\par
syntax exempel:\par
\tab Console.Write("Hvor mange biler har jeg? Sp\'f8rger brian. Skriv svar her -> );\par
\tab int iAntalBilerG\'e6t = Convert.ToInt32(Console.ReadLine());\par
\tab switch (iAntalBilerG\'e6t) \par
\tab\{\par
\tab case 0:\par
\tab Console.WriteLine("Jeg hedder Brian og du tror virkelig jeg ikke har en bil?");\par
\tab break;\par
\tab case 1:\par
\tab Console.WriteLine("Det er en start dog slet ikke nok");\par
\tab break;\par
\tab\}\par
svar: hvorimod et if else statement har en l\'e6ngere beskrivelse ved hvert udfald angivet i ()'er. Det kan for nogle m\'e5ske v\'e6re nemmere eller mere overskueligt med switch case statements. Jeg fortr\'e6kker dog personligt if else da det er mere generelt og jeg har lettere ved at forst\'e5 hvert udfald.\par
//retelse: switch case statements kan godt bruges til strings f.eks.. dog har de problemer med flere v\'e6rdier p\'e5 samme condition. S\'e5 de kan godt tage mere end ints.\par
\tab 2. Har du sp\'f8rgsm\'e5l til dette kapitel? Skriv dem ned!\par
Er mine svar rigtige eller burde jeg uddybe mere?\b\par
}
 